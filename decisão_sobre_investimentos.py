# -*- coding: utf-8 -*-
"""Decisão sobre investimentos

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/17fvm-Zl3WRpG1smwInQt3ksi7cjJSe_l

Vinicius Henrique de Oliveira Franzote                           RA 221024174
"""

import pandas as pd
import seaborn as sb
import matplotlib.pyplot as plt
from google.colab import files

#Carregando arquivos
uploaded = files.upload()

file = 'acoes-jan-2018-agosto-2024.csv'

dados = pd.read_csv(file)

dados.head()

def percentual_rendimento(ticker, data_inicial, data_final):
    # Filtrar os dados para a empresa e as datas desejadas
    df_filtrado = dados[ticker].loc[data_inicial:data_final]

    if df_filtrado.empty:
        return "Não há dados para o período informado."

    preco_inicial = df_filtrado.iloc[0]
    preco_final = df_filtrado.iloc[-1]

    rendimento = ((preco_final - preco_inicial) / preco_inicial) * 100
    return rendimento

# Exemplo de uso da função
data_inicial = '2018-08-31'  # Substitua pela data inicial desejada
data_final = '2024-08-30'     # Substitua pela data final desejada
ticker = 'BBAS3'              # Substitua pelo ticker desejado

resultado = percentual_rendimento(ticker, data_inicial, data_final)
print(f'O percentual de rendimento de {ticker} entre {data_inicial} e {data_final} é: {resultado:.2f}%')

# Verificando se os tickers estão presentes no DataFrame
tickers = ['BBAS3', 'PETR4', 'VIVT3', 'VALE3']
plt.figure(figsize=(14, 7))

for t in tickers:
    if t in dados.columns:
        plt.plot(dados.index, dados[t], label=t)

plt.title('Desempenho das Ações ao Longo do Tempo')
plt.xlabel('Data')
plt.ylabel('Evolução')
plt.legend()
plt.grid()
plt.show()

#EXERCÍCIO 2

dados['Date'] = pd.to_datetime(dados['Date'])

dados.set_index('Date', inplace=True)

def calcular_rendimento(acao, data_inicial, data_final):
    data_inicial = pd.to_datetime(data_inicial)
    data_final = pd.to_datetime(data_final)

    dados_periodo = dados.loc[data_inicial:data_final]

    if dados_periodo.empty:
        print("Nenhum dado disponível no período informado.")
        return

    preco_inicial = dados_periodo[acao].iloc[0]
    preco_final = dados_periodo[acao].iloc[-1]

    rendimento = ((preco_final - preco_inicial) / preco_inicial) * 100
    print(f'O rendimento da ação {acao} entre {data_inicial.date()} e {data_final.date()} foi de {rendimento:.2f}%.')

calcular_rendimento('BBAS3', '2020-01-01', '2020-12-31') # (escolha a empresa, data inicial e a data final)

